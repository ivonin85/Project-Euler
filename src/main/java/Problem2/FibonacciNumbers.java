package Problem2;

public class FibonacciNumbers {

    int limit;

    public FibonacciNumbers(int limit) {
        this.limit = limit;
    }

    public int countingNumbers() {

        int n0 = 1;
        int n1 = 1;
        int n2;
        int sum = 0;

        for(int i = 3; i <= 50; i++){

            n2=n0+n1;
            if (n2 >= limit) break;
            if (n2% 2 == 0)
                sum += n2;

            n0=n1;
            n1=n2;

        }
        return sum;
    }

    /**Even Fibonacci numbers
     * Problem 2
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
     * By starting with 1 and 2, the first 10 terms will be:
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

    public static void main(String[] args) {
        int limit = 4000000;
        System.out.println(new FibonacciNumbers(limit).countingNumbers());

    }
}
